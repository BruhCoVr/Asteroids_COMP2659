#ifndef RASTER_H
#include <stdio.h>
#include <osbind.h>

#define RASTER_H
#define SCREEN_WIDTH 640
#define SCREEN_HEIGHT 400
#define SHIP_HEIGHT 64
#define BITS_IN_BYTE 8
#define BYTES_PER_ROW (SCREEN_WIDTH / BITS_IN_BYTE) // 80 bytes per row
typedef unsigned long UINT16;

int ship_up_bitmap [SHIP_HEIGHT] = {
    0x0001,0x8000,
    0x0003,0xC000,
    0x0007,0xE000,
    0x0007,0xE000,
    0x000F,0xF000,
    0x000F,0xF000,
    0x001F,0xF800,
    0x001F,0xF800,
    0x003F,0xFC00,
    0x003E,0x7C00,
    0x007E,0x7E00,
    0x007C,0x3E00,
    0x00FC,0x3F00,
    0x00F8,0x1F00,
    0x01F8,0x1F80,
    0x01F8,0x1F80,
    0x03F0,0x0FC0,
    0x03F0,0x0FC0,
    0x03E0,0x07C0,
    0x07E0,0x07E0,
    0x07C0,0x03E0,
    0x0FC0,0x03F0,
    0x0F80,0x01F0,
    0x1F80,0x01F8,
    0x1F00,0x00F8,
    0x3F00,0x00FC,
    0x3E00,0x007C,
    0x7E00,0x007E,
    0x7FFF,0xFFFE,
    0xFFFF,0xFFFF,
    0xFFFF,0xFFFF,
    0xFFFF,0xFFFF
    
};

int ship_right_bitmap [SHIP_HEIGHT] = {
    0xE000,0x0000,
    0xF800,0x0000,
    0xFE00,0x0000,
    0xFF80,0x0000,
    0xFFE0,0x0000,
    0xFFF8,0x0000,
    0xFFFF,0x0000,
    0xF3FF,0xC000,
    0xF0FF,0xF000,
    0xF03F,0xFC00,
    0xF00F,0xFF00,
    0xF003,0xFFC0,
    0xF000,0xFFF0,
    0xF000,0x1FFC,
    0xF000,0x07FE,
    0xF000,0x01FF,
    0xF000,0x01FF,
    0xF000,0x07FE,
    0xF000,0x1FFC,
    0xF000,0xFFF0,
    0xF003,0xFFC0,
    0xF00F,0xFF00,
    0xF03F,0xFC00,
    0xF0FF,0xF000,
    0xF3FF,0xC000,
    0xFFFF,0x0000,
    0xFFF8,0x0000,
    0xFFE0,0x0000,
    0xFF80,0x0000,
    0xFE00,0x0000,
    0xF800,0x0000,
    0xE000,0x0000,
};

int ship_down_bitmap [SHIP_HEIGHT] = {
    0xFFFF,0xFFFF,
    0xFFFF,0xFFFF,
    0xFFFF,0xFFFF,
    0x7FFF,0xFFFE,
    0x7E00,0x007E,
    0x3E00,0x007C,
    0x3F00,0x00FC,
    0x1F00,0x00F8,
    0x1F80,0x01F8,
    0x0F80,0x01F0,
    0x0FC0,0x03F0,
    0x07C0,0x03E0,
    0x07E0,0x07E0,
    0x03E0,0x07C0,
    0x03F0,0x0FC0,
    0x03F0,0x0FC0,
    0x01F8,0x1F80,
    0x01F8,0x1F80,
    0x00F8,0x1F00,
    0x00FC,0x3F00,
    0x007C,0x3E00,
    0x007E,0x7E00,
    0x003E,0x7C00,
    0x003F,0xFC00,
    0x001F,0xF800,
    0x001F,0xF800,
    0x000F,0xF000,
    0x000F,0xF000,
    0x0007,0xE000,
    0x0007,0xE000,
    0x0003,0xC000,
    0x0001,0x8000,

};

int ship_left_bitmap [SHIP_HEIGHT] = {
    0x0000,0x0007,
    0x0000,0x001F,
    0x0000,0x007F,
    0x0000,0x01FF,
    0x0000,0x07FF,
    0x0000,0x1FFF,
    0x0000,0xFFFF,
    0x0003,0xFFCF,
    0x000F,0xFF0F,
    0x003F,0xFC0F,
    0x00FF,0xF00F,
    0x03FF,0xC00F,
    0x0FFF,0x000F,
    0x3FF8,0x000F,
    0x7FE0,0x000F,
    0xFF80,0x000F,
    0xFF80,0x000F,
    0x7FE0,0x000F,
    0x3FF8,0x000F,
    0x0FFF,0x000F,
    0x03FF,0xC00F,
    0x00FF,0xF00F,
    0x003F,0xFC0F,
    0x000F,0xFF0F,
    0x0003,0xFFCF,
    0x0000,0xFFFF,
    0x0000,0x1FFF,
    0x0000,0x07FF,
    0x0000,0x01FF,
    0x0000,0x007F,
    0x0000,0x001F,
    0x0000,0x0007,

};
void print_ship_up(UINT16 *base, int x, int y, const UINT16 *bitmap, unsigned int height);
void print_ship_right(UINT16 *base, int x, int y, const UINT16 *bitmap, unsigned int height);
void print_ship_down(UINT16 *base, int x, int y, const UINT16 *bitmap, unsigned int height);
void print_ship_left(UINT16 *base, int x, int y, const UINT16 *bitmap, unsigned int height); 
#endif 